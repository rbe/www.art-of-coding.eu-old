<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="de" lang="de"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html">
<ui:composition template="/resources/scrollable-layout.xhtml">
    <ui:define name="content">
        <h1>Die Kunst grenzenloser Programmierung</h1>
        <h2>Kann Programmieren kunst sein?</h2>
        <p>
            Art of Coding entwickelt und schreibt Programme, die einen bestimmten Zweck erf&uuml;llen. Unsere Software soll funktionieren. Unsere Algorithmen sollen ausrechnen. Unsere Komponenten sollen sich einf&uuml;gen.<br/>
            <br/>
            Unsere Arbeit soll f&uuml;r andere Entwickler eine Hilfe bei der Bew&auml;ltigung ihrer Arbeit sein, sie soll die Informatiker und IT-Experten unserer Kunden unterst&uuml;tzen, sie soll den Nutzer der Softwarel&ouml;sungen weiterbringen.<br/>
            <br/>
            So verstanden hat das Programmieren doch wenig K&uuml;nstlerisches an sich! Es entspricht vielmehr dem Charakter eines Handwerks.<br/>
            <br/>
            Kann Programmieren also Kunst sein?
        </p>
        <h2>DIE KUNST IM PROGRAMM: MAN SIEHT SIE EINFACH NICHT.</h2>
        <p>
            Art of Coding schafft Software und Softwarekomponenten, die letztendlich vom Benutzer &uuml;ber eine Oberfl&auml;che bedient wird. Das eigentliche Programm, der Quelltext, bleibt dabei f&uuml;r den Nutzer unsichtbar. Wenn unsere Programme denn Kunst sein sollten, w&uuml;rde diese nicht unbemerkt bleiben?<br/>
            <br/>
            Unsere Softwareprodukte und Programmcodes werden in erster Linie von anderen Programmierern bedient, beschaut und bearbeitet. Wir setzen unsere Bildung und Qualifikation ein, um einen Code von hoher Quali&auml;t herzustellen –f&uuml;r qualifizierte Personen, die sich ein Bild davon machen k&ouml;nnen, ob ein Programm gut programmiert wurde.<br/>
            <br/>
            Sie ist also nicht einfach zu sehen, die Kunst im Programm. Aber nur weil das Erkennen der Kunstfertigkeit einer Expertise bedarf, kann nicht von ihrer Abwesenheit ausgegangen werden.<br/>
        </p>
        <h2>KUNST KOMMT VON K&Ouml;NNEN. SCH&Ouml;NHEIT IST WAHRHEIT.</h2>
        <p>
            Art of Coding hat den Anspruch, Software zu produzieren, die gekonnt ist. So gesehen kann das Handwerk der Programmierung als Kunst verstanden werden, wenn man Aristoteles folgt:<br/>
            <br/>
            "Der handwerksbedingte Ursprung des Kunstbegriffs manifestiert sich im griechischen Wort techne, in dem Aristoteles die F&auml;higkeit ausgedr&uuml;ckt sieht, ein Produkt herzustellen, mit dem Wissen um das innewohnende Prinzip. Gelingt die Arbeit, wird von K&ouml;nnen als Kunst gesprochen; auch die Heil- und Kriegskunst z&auml;hlen in der Antike zu den artes." (M&auml;ckler 2000)<br/>
            <br/>
            Die Kunst des Programmierens liegt also in ihrer G&uuml;te, in ihrer Qualit&auml;t. Wir empfinden ein gekonntes, ein gutes Programm als sch&ouml;n. Das Sch&ouml;ne am Programm wird sichtbar, wenn es bestimmten Kriterien entspricht. Nach Donald E. Knuth, Verfasser des Werks "The Art of Computer Programming", w&uuml;rde die Mehrheit der Programmierer folgendem Kanon der &auml;sthetischen Prinzipien eines Programms zustimmen:<br/>
        </p>
        <ol>
            <li>Korrektheit</li>
            <li>Wartbarkeit</li>
            <li>Lesbarkeit</li>
            <li>Übersichtlichkeit, Klarheit</li>
            <li>Gutm&uuml;tiger Umgang mit dem Benutzer</li>
            <li>Effizienz</li>
        </ol>
        <p>
            (T&uuml;g 2006)<br/>
            <br/>
        </p>
        <p>
            Hier sieht man sie also, die Kunst des Programmierens. In der wahrhaftigen Sch&ouml;nheit des Programms! Man schaue sich etwa Dijkstras Algorithmus an, "... ein sch&ouml;nes, elegantes Programm, das die K&ouml;nnerschaft seines Autors unter Beweis stellt!" (T&uuml;g 2006).<br/>
            <br/>
            [Erkl&auml;rungen und Code zur Berechnung der Fakult&auml;t in verschiedenen Sprachen, von vielen Zeilen zu einer, von fehleranf&auml;llig bis perfekt]<br/>
            <br/>
            Mit anderen Worten: Wenn Programmieren ein Handwerk ist, ist gutes Programmieren ein kunstvolles Handwerk, handwerkliche Kunst, ein Kunsthandwerk und vielleicht sogar Kunst.
        </p>
        <h2>DIE KUNST GRENZENLOSER PROGRAMMIERUNG.</h2>
        <p>
            Art of Coding programmiert ohne Grenzen. Wenn wir mit einer Sprache an eine Grenze sto&szlig;en, schreiben wir in einer anderen Sprache. Oder in mehreren.<br/>
            <br/>
            Mit Freiheit, Vielseitigkeit, Offenheit, und Unabh&auml;ngigkeit schaffen wir es, grenz&uuml;berschreitende L&ouml;sungen auch f&uuml;r Anforderungen zu schaffen, die in Grenzbereichen liegen.<br/>
            <br/>
            Wir bewegen uns als Grenzg&auml;nger, um f&uuml;r unsere Kunden robusten und stabilen Code in seiner effizientestenund effektivsten Art herzustellen.
        </p>
        <p>
            <strong>Das nennen wir die Kunst grenzenloser Programmierung. The Art of Coding.</strong>
        </p>
        <h2>Quellenangaben</h2>
        <ul>
            <li>
                <h:outputLink value="http://www.juraforum.de/">Juraforum.de - Disclaimer, Gesetze, Urteile, Lexikon</h:outputLink>
            </li>
            <li>
                <h:outputLink value="http://www.gregel.com/about/datenschutzerklaerung/">gregel.com Datenschutzerkl&auml;rung</h:outputLink>
            </li>
            <li>
                <h:outputLink value="http://www.gregel.com/8059/facebook-gefaellt-mir-gehoert-in-die-datenschutzerklaerung/">Beitrag Facebook "Gef&auml;llt mir" geh&ouml;rt in die Datenschutzerkl&auml;rung</h:outputLink>
            </li>
        </ul>
    </ui:define>
    <ui:define name="javascript">
        <script type="text/javascript" language="JavaScript">
            //<![CDATA[
        $(document).ready(function() {
                var colorFooter = '#3d2bff'; // '#00f';
                init(colorFooter);
                // Hintergrund einblenden
                $.backstretch("#{resource['images/background/kunst.jpg']}");
                changeColors(colorFooter);
            });
            //]]>
        </script>
    </ui:define>
</ui:composition>
</html>
